name: Build and Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP || 'devtoprodrg' }}
  APP_NAME: ${{ vars.APP_NAME || 'devtoprodapp' }}
  REGISTRY_NAME: ${{ vars.REGISTRY_NAME || 'devtoprodappacr' }}
  REGISTRY_LOGIN_SERVER: ${{ vars.REGISTRY_LOGIN_SERVER || format('{0}.azurecr.io', vars.REGISTRY_NAME || 'devtoprodappacr') }}
  IMAGE_NAME: devtoprod
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'maven'
        
    - name: Log in to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        auth-type: 'SERVICE_PRINCIPAL'

    - name: Log in to ACR
      run: |
        az acr login --name ${{ env.REGISTRY_NAME }}
      
    - name: Build and Push image with Spring Boot Maven plugin
      run: |
        ./mvnw spring-boot:build-image \
          -Dspring-boot.build-image.imageName=${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
          -DskipTests
        
        # Tag the image as latest too
        docker tag ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
        
        # Push both tags to ACR
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
    
    - name: Get ACR Credentials
      run: |
        # Get ACR admin credentials
        ACR_USERNAME=$(az acr credential show --name ${{ env.REGISTRY_NAME }} --query username -o tsv)
        ACR_PASSWORD=$(az acr credential show --name ${{ env.REGISTRY_NAME }} --query "passwords[0].value" -o tsv)
        
        # Set as environment variables for the next step
        echo "ACR_USERNAME=$ACR_USERNAME" >> $GITHUB_ENV
        echo "ACR_PASSWORD=$ACR_PASSWORD" >> $GITHUB_ENV
        
    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
        containerAppEnvironment: ${{ env.APP_NAME }}-environment
        containerAppName: ${{ env.APP_NAME }}
        imageToDeploy: ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        registryUrl: ${{ env.REGISTRY_LOGIN_SERVER }}
        registryUsername: ${{ env.ACR_USERNAME }}
        registryPassword: ${{ env.ACR_PASSWORD }}
